
class MinStack {
public:
    vector<long long int> v;
    long long int min = 0;
    MinStack() {
        
    }
    
    void push(int val) {
        if(v.empty())
        {
            v.push_back(val);
            min = val;
        }
        else
        {
          if(val < min)
          {
            v.push_back((long long int)2*val-min); 
            min = val;
          } 
            else
              v.push_back(val);  
        }
       
        
    }
    
    void pop() {
        if(v.back() < min)
        {
           int popVal = min; 
           min = 2*min-v.back(); 
        }
            
        v.pop_back();
    }
    
    int top() {
        if(v.back() < min)
         return min;
        else
        return v.back();    
    }
    
    int getMin() {
        return min;
    }
};

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack* obj = new MinStack();
 * obj->push(val);
 * obj->pop();
 * int param_3 = obj->top();
 * int param_4 = obj->getMin();
 */
